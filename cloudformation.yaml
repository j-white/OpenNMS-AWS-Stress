- name: provision stack
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - "cloudformation_vars.yaml"
  tasks:
  - name: launch the opennms stress lab stack
    cloudformation:
      stack_name: "opennms-newts-stress-lab"
      state: "present"
      region: "{{ Region }}"
      disable_rollback: true
      template: "opennms-stress.json"
      template_parameters:
        KeyName: "{{ KeyName }}"
        OpenNMSInstanceType: "{{ OpenNMSInstanceType }}"
        PostgreSQLInstanceType: "{{ PostgreSQLInstanceType }}"
        CassandraInstanceType: "{{ CassandraInstanceType }}"
        CassandraCount: "{{ CassandraCount }}"
        OpenNMSCount: "{{ OpenNMSCount }}"
      tags:
        Owner: "jwhite"
        Env: "DEV"
    register: stack
    tags:
     - provision
  - name: destroy stack
    cloudformation:
      stack_name: "opennms-newts-stress-lab"
      state: "absent"
      region: "{{ Region }}"
    tags:
     - destroy
  - name: gather EC2 facts.
    ec2_remote_facts:
      region: "{{ Region }}"
    register: ec2_facts
    tags:
      debug
  - name: debug
    debug:
      msg: "{{ ec2_facts }}"
    tags:
      debug


- name: common setup
  hosts: tag_aws_cloudformation_stack_name_opennms_newts_stress_lab
  remote_user: ec2-user
  tasks:
  - name: upgrade all packages
    yum: name=* state=latest
    become: yes
    become_user: root
    tags:
     - setup
  - name: install tools
    yum: pkg={{item}} state=latest
    with_items:
     - net-snmp
     - net-snmp-utils
     - git
     - tcpdump
     - telnet
     - perl(LWP)
     - perl(XML::Twig)
     - fio
    become: yes
    become_user: root
    tags:
     - setup
  - name: copy snmpd.conf
    template: src=files/common/snmpd.conf dest=/etc/snmp/snmpd.conf owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
  - name: ensure snmpd is enabled started
    service: name=snmpd enabled=yes state=started
    become: yes
    become_user: root
    tags:
     - setup
  - name: download nmon
    get_url:
      url: https://cytranet.dl.sourceforge.net/project/nmon/nmon16e_mpginc.tar.gz
      timeout: 30
      validate_certs: no
      dest: /opt/nmon16e_mpginc.tar.gz
      mode: 0755
    become: yes
    become_user: root
    tags:
     - setup
  - name: mkdir nmon
    file: path=/opt/nmon state=directory owner=root group=root mode=0755
    become: yes
    become_user: root
    tags:
     - setup
  - name: extract nmon
    unarchive: src=/opt/nmon16e_mpginc.tar.gz  dest=/opt/nmon creates=/opt/nmon/nmon_x86_64_centos7 copy=no
    become: yes
    become_user: root
    tags:
     - setup
  - name: copy nmon
    copy: remote_src=true src=/opt/nmon/nmon_x86_64_centos7 dest=/usr/bin/nmon mode=755
    become: yes
    become_user: root
    tags:
     - setup





- name: postgres setup
  hosts: tag_OnmsLabInstanceType_postgres
  remote_user: ec2-user
  tasks:
  - name: debug
    debug:
      msg: "IP Addresses PostgreSQL, public={{ inventory_hostname }} private={{ ec2_private_ip_address }}"
    tags:
     - debug
  - name: install postgres
    yum: pkg={{item}} state=latest
    with_items:
     - postgresql95-server
     - postgresql95-contrib
    become: yes
    become_user: root
    tags:
     - setup
     - postgres
  - stat: path=/var/lib/pgsql95/data/pg_xlog
    become: yes
    become_user: root
    register: pgdata_xlog
    tags:
     - setup
     - postgres
  - command: "service postgresql95 initdb"
    become: yes
    become_user: root
    when: pgdata_xlog.stat.exists == False
    tags:
     - setup
     - postgres
  - name: configure postgres (pg_hba.conf)
    template: src=files/postgresql/pg_hba.conf dest=/var/lib/pgsql95/data/pg_hba.conf owner=postgres group=postgres mode=0600
    become: yes
    become_user: root
    tags:
     - setup
     - postgres
  - name: configure postgres (postgresql.conf)
    template: src=files/postgresql/postgresql.conf dest=/var/lib/pgsql95/data/postgresql.conf owner=postgres group=postgres mode=0600
    become: yes
    become_user: root
    tags:
     - setup
     - postgres
  - name: enable and start postgres
    service: name=postgresql95 enabled=yes state=started
    become: yes
    become_user: root
    tags:
     - setup
     - postgres




- name: cassandra setup
  hosts: tag_OnmsLabInstanceType_cassandra
  remote_user: ec2-user
  tasks:
  - name: debug
    debug:
      msg: "IP Addresses Cassandra #{{ ec2_ami_launch_index }}, public={{ inventory_hostname }} private={{ ec2_private_ip_address }}"
    tags:
     - debug
  - name: copy datatax yum repository configuration
    copy: src=files/cassandra/datastax.repo dest=/etc/yum.repos.d/datastax.repo owner=root group=root mode=0644 force=no
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: install openms yum repository rpm
    yum: name=https://yum.opennms.org/repofiles/opennms-repo-branches-foundation-2016-rhel6.noarch.rpm state=present
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: install opennms gpg key
    rpm_key: state=present key=https://yum.opennms.org/OPENNMS-GPG-KEY
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: install cassandra rpm packages
    yum: name={{item}} state=installed
    with_items:
    - jdk1.8.0_60
    - cassandra30
    - cassandra30-tools
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: copy cassandra.yaml
    template: src=files/cassandra/cassandra.yaml dest=/etc/cassandra/conf/cassandra.yaml owner=cassandra group=cassandra mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: copy cassandra-env.sh
    template: src=files/cassandra/cassandra-env.sh dest=/etc/cassandra/conf/cassandra-env.sh owner=cassandra group=cassandra mode=0755
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: copy jmxremote.password
    template: src=files/cassandra/jmxremote.password dest=/etc/cassandra/jmxremote.password owner=cassandra group=cassandra mode=0400
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: copy jmxremote.access
    template: src=files/cassandra/jmxremote.access dest=/etc/cassandra/jmxremote.access owner=cassandra group=cassandra mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: copy jolokia JVM agent
    copy: src=files/cassandra/jolokia-jvm-agent.jar dest=/etc/cassandra/jolokia-jvm-agent.jar owner=cassandra group=cassandra mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra
  - name: ensure cassandra is enabled started
    service: name=cassandra enabled=yes state=started
    become: yes
    become_user: root
    tags:
     - setup
     - cassandra




- name: opennms setup
  hosts: tag_OnmsLabInstanceType_opennms
  remote_user: ec2-user
  tasks:
  - name: debug
    debug:
      msg: "IP Addresses OpenNMS #{{ ec2_ami_launch_index }}, public={{ inventory_hostname }} private={{ ec2_private_ip_address }}"
    tags:
     - debug
  - name: install openms yum repository rpm
    yum: name=https://yum.opennms.org/repofiles/opennms-repo-branches-foundation-2016-rhel6.noarch.rpm state=present
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: install opennms gpg key
    rpm_key: state=present key=https://yum.opennms.org/OPENNMS-GPG-KEY
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: install opennms
    yum: pkg={{item}} state=latest
    with_items:
     - opennms-core
     - opennms-webapp-jetty
     - opennms-plugin-protocol-xml
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: download hawtio
    get_url:
      url: https://oss.sonatype.org/content/repositories/public/io/hawt/hawtio-default/1.4.63/hawtio-default-1.4.63.war
      dest: /opt/opennms/etc/hawtio.war.zip
      mode: 0755
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: mkdir hawtio
    file: path=/opt/opennms/jetty-webapps/hawtio state=directory owner=root group=root mode=0755
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: extract hawtio
    unarchive: src=/opt/opennms/etc/hawtio.war.zip dest=/opt/opennms/jetty-webapps/hawtio creates=/opt/opennms/jetty-webapps/hawtio/index.html copy=no
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (opennms.conf)
    template: src=files/opennms/opennms.conf dest=/opt/opennms/etc/opennms.conf owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (opennms.properties)
    template: src=files/opennms/opennms.properties dest=/opt/opennms/etc/opennms.properties owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (opennms-datasources.xml)
    template: src=files/opennms/opennms-datasources.xml dest=/opt/opennms/etc/opennms-datasources.xml owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (collectd-configuration.xml)
    template: src=files/opennms/collectd-configuration.xml dest=/opt/opennms/etc/collectd-configuration.xml owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (poller-configuration.xml)
    template: src=files/opennms/poller-configuration.xml dest=/opt/opennms/etc/poller-configuration.xml owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
#  - name: configure opennms (org.apache.karaf.features.cfg)
#    template: src=files/opennms/org.apache.karaf.features.cfg dest=/opt/opennms/etc/org.apache.karaf.features.cfg owner=root group=root mode=0644
#    become: yes
#    become_user: root
#    tags:
#     - setup
#     - opennms
  - name: configure opennms (service-configuration.xml)
    template: src=files/opennms/service-configuration.xml dest=/opt/opennms/etc/service-configuration.xml owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: creates directory imports/pending
    file: path=/opt/opennms/etc/imports/pending state=directory
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (imports/pending/Local.xml)
    template: src=files/opennms/imports/pending/Local.xml dest=/opt/opennms/etc/imports/pending/Local.xml owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - name: configure opennms (imports/pending/Full.xml)
    template: src=files/opennms/imports/pending/Full.xml dest=/opt/opennms/etc/imports/pending/Full.xml owner=root group=root mode=0644
    become: yes
    become_user: root
    tags:
     - setup
     - opennms
  - stat: path=/opt/opennms/etc/opennms-upgrade-status.properties
    become: yes
    become_user: root
    register: opennms_upgrade_status
    tags:
     - setup
     - opennms
  - command: "/opt/opennms/bin/install -dis"
    become: yes
    become_user: root
    when: opennms_upgrade_status.stat.exists == False
    tags:
     - setup
     - opennms

